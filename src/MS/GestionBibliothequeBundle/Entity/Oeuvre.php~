<?php namespace MS\GestionBibliothequeBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;
use DateTime;

/**
 * Classe abstraite représentant tout type de document empruntable en bibliothèque
 * @access public
 * @author marc
 * @package model
 * @ORM\Entity 
 * @ORM\Table(name="oeuvre")
 * @ORM\InheritanceType("JOINED")
 * @ORM\DiscriminatorColumn(name="DISCR", type="string")
 * @ORM\DiscriminatorMap({"livre" = "Livre", "dvd" = "DVD" })
 */
abstract class Oeuvre {
    const ETAT_NEUF = 0;
    const ETAT_MOYEN = 1;
    const ETAT_DEGRADE= 2;
    
	/**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
	
	/**
	 * AttributeType string
	 * Titre de l'oeuvre
	 * @ORM\Column(type="string", name="titre")
	 */
	private $titre = null;
	
	/**
	 * AttributeType string
	 * @ORM\Column(type="string", name="sujet")
	 */
	private $sujet = null;
	
	/**
	 * AttributeType DateTime
	 * @ORM\Column(type="datetime", name="date_publication")
	 */
	private $dateDePublication = null;
	
	/**
	 * AttributeType string
	 * @ORM\Column(type="string", name="fonds_specifique", nullable=true)
	 */
	private $fondsSpecifique = null;
	
	/**
	 * AttributeType string
	 * @ORM\Column(type="string", name="langue")
	 */
	private $langue = null;
	
	/**
	 * One Oeuvre has Many Emprunt
	 * AssociationType model.Emprunt
	 * AssociationMultiplicity 0..*
	 * @ORM\OneToMany(targetEntity="Emprunt", mappedBy="oeuvre")
	 */
	private $emprunts;
	
	/**
	 * One Editeur has Many Oeuvre (One To Many, Bidirectional)
	 * AssociationType model.Editeur
	 * AssociationMultiplicity 1
	 * @ORM\ManyToOne(targetEntity="Editeur", inversedBy="oeuvres")
	 * @ORM\JoinColumn(name="editeur_id", referencedColumnName="id")
	 */
	private $editeur;
	
	/**
	 * Many Auteur have Many Oeuvre ( Many-To-Many, Unidirectional)
	 * AssociationType model.Auteur
	 * AssociationMultiplicity *..*
	 */
	private $auteurs;
	
	/**
	 * AssociationType model.Reservation (One To Many, bidirectional)
	 * AssociationMultiplicity 0..*
	 * @ORM\OneToMany(targetEntity="Reservation", mappedBy="oeuvre")
	 */
	private $reservations;
	
	private $etat = ETAT_NEUF;

	/**
	 * AssociationType model.Exemplaire (One To Many, bidirectional)
	 * AssociationMultiplicity *
	 * @ORM\OneToMany(targetEntity="Exemplaire", mappedBy="exemplaireOeuvre")
	 */
	private $exemplaires;
	
	/**
	 * AssociationType model.Commentaire
	 * AssociationMultiplicity *
	 * @ORM\OneToMany(targetEntity="Commentaire", mappedBy="commentaireOeuvre")
	 */
	private $commentaires = array();
	
	public function __construct() {
	    $this->emprunts = new ArrayCollection();
	    $this->reservations = new ArrayCollection();
	    $this->exemplaires = new ArrayCollection();
	    $this->commentaires = new ArrayCollection();
	}
	
	
}
